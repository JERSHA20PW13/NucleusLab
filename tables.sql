CREATE TABLE BLOCKING (
  ACADEMIC_YEAR VARCHAR(12),
  SEMESTER VARCHAR(5),
  LAB VARCHAR(6),
  _DAY VARCHAR(10),
  FROMPERIOD INTEGER,
  TOPERIOD INTEGER,
  PRIMARY KEY(ACADEMIC_YEAR, SEMESTER, LAB, _DAY, FROMPERIOD, TOPERIOD)
);

CREATE TABLE BOOKING (
  STAFFID VARCHAR(6),
  PROGRAMME VARCHAR(10),
  _YEAR INTEGER,
  LAB VARCHAR(6),
  BOOKINGDATE DATE,
  ENTRYDATE DATE,
  FROMPERIOD INTEGER,
  TOPERIOD INTEGER,
  PURPOSE VARCHAR(1000),
  PRIMARY KEY( LAB, BOOKINGDATE, FROMPERIOD, TOPERIOD )
);

CREATE TABLE COMPLAINTS (
  COMPLAINTID INT NOT NULL AUTO_INCREMENT,
  USERID VARCHAR(6),
  LAB VARCHAR(6),
  _ROW INTEGER,
  _COL INTEGER,
  SYSTEMNO INTEGER,
  REQUIREMENT VARCHAR(1000),
  DATE_TIME DATETIME,
  _STATUS VARCHAR(20),
  RESOLVEDDATE DATE,
  REMARKS VARCHAR(500),
  RESOLVEDBY VARCHAR(40),
  PRIMARY KEY(COMPLAINTID)
);

CREATE TABLE COURSE_DATES (
  ACADEMIC_YEAR VARCHAR(12),
  CLASS VARCHAR(10),
  SEMESTER VARCHAR(5),
  START_DATE DATE,
  END_DATE DATE,
  PRIMARY KEY (ACADEMIC_YEAR, CLASS, SEMESTER)
);

CREATE TABLE LOGIN_REQUESTS (
  REQUESTID INT NOT NULL AUTO_INCREMENT,
  STAFFID VARCHAR(6),
  STAFFNAME VARCHAR(40),
  STAFFEMAIL VARCHAR(80),
  CLASS VARCHAR(5),
  DATEREQUESTED DATETIME,
  DATENEEDED DATE,
  FROMPERIOD INTEGER,
  TOPERIOD INTEGER,
  _TYPE VARCHAR(10),
  NOOFLOGINS INTEGER,
  TOOLS VARCHAR(40),
  SERIES VARCHAR(20),
  _STATUS VARCHAR(20),
  PRIMARY KEY(REQUESTID)
);

CREATE TABLE SCHEDULE (
  ACADEMICYEAR VARCHAR(12),
  SEMESTER VARCHAR(5),
  _YEAR INTEGER,
  PROGRAMME VARCHAR(10),
  LAB VARCHAR(6),
  _DAY VARCHAR(10),
  PERIOD INTEGER,
  PRIMARY KEY(_DAY, LAB, PERIOD, ACADEMICYEAR, SEMESTER)
);

CREATE TABLE WIFI (
  ROLLNO VARCHAR(6),
  _NAME VARCHAR(50),
  MAC VARCHAR(20),
  MODEL VARCHAR(100),
  _TYPE VARCHAR(15),
  MOBILE VARCHAR(10),
  ROUTERNAME VARCHAR(20),
  VERIFY VARCHAR(20),
  _STATUS VARCHAR(10),
  PRIMARY KEY(ROLLNO)
);